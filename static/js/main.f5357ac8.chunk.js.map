{"version":3,"sources":["pixel-coin-png-4.gif","BetForm.js","NumberChoice.js","DiceGame.js","helpers.js","CoinGame.js","GameSelector.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BetForm","props","state","bet","handleChange","bind","handleSubmit","e","preventDefault","target","value","this","totalCoins","console","log","setState","name","setBet","Number","toggleBet","onSubmit","htmlFor","type","id","onChange","className","Component","NumberChoice","handleClick","playerChoice","gamePlay","coinChoices","onClick","diceChoices","game","DiceGame","betting","computerPlay","Math","floor","random","finishGame","CoinGame","faces","length","coinFlip","GameSelector","gamePicker","firstGame","Game","gametype","winnerMessage","correctChoice","winner","newTotal","src","require","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+KAAAA,EAAOC,QAAU,IAA0B,8C,+HCEtBC,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,IAAK,IAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANN,E,yDASLE,GACTA,EAAEC,iBAECD,EAAEE,OAAOC,MAASC,KAAKV,MAAMW,YAAcL,EAAEE,OAAOC,OAAS,EAC5DG,QAAQC,IAAI,eAEZH,KAAKI,SAAL,eACKR,EAAEE,OAAOO,KAAQT,EAAEE,OAAOC,U,mCAI1BH,GACTA,EAAEC,iBACFG,KAAKV,MAAMgB,OAAOC,OAAOP,KAAKT,MAAMC,MACpCQ,KAAKV,MAAMkB,c,+BAGX,OACI,6BACI,0BAAMC,SAAUT,KAAKL,cAEjB,2BAAOe,QAAQ,OAAf,sBACA,2BAAOC,KAAK,SAASN,KAAK,MAAMO,GAAG,MAAMC,SAAWb,KAAKP,eACzD,4BAAQqB,UAAU,gBAAlB,oB,GAjCiBC,aCChBC,E,kDACjB,WAAY1B,GAAO,IAAD,8BACd,cAAMA,IACD2B,YAAc,EAAKA,YAAYvB,KAAjB,gBAFL,E,wDAKNE,GACR,IAAMsB,EAAetB,EAAEE,OAAOC,MAC9BC,KAAKV,MAAM6B,SAASD,K,+BAGpB,IAAME,EACF,6BACI,4BAAQN,UAAU,mBAAmBO,QAASrB,KAAKiB,YAAalB,MAAM,SAAtE,SAGA,4BAAQe,UAAU,mBAClBO,QAASrB,KAAKiB,YAAalB,MAAQ,SADnC,UAMFuB,EACF,yBAAKR,UAAU,IACX,4BAAQA,UAAU,mBAClBO,QAASrB,KAAKiB,YAAalB,MAAQ,KADnC,KAIA,4BAAQe,UAAU,mBAClBO,QAASrB,KAAKiB,YAAalB,MAAQ,KADnC,KAIA,4BAAQe,UAAU,mBAClBO,QAASrB,KAAKiB,YAAalB,MAAQ,KADnC,KAIA,4BAAQe,UAAU,mBAClBO,QAASrB,KAAKiB,YAAalB,MAAQ,KADnC,KAIA,4BAAQe,UAAU,mBAClBO,QAASrB,KAAKiB,YAAalB,MAAQ,KADnC,KAIA,4BAAQe,UAAU,mBAClBO,QAASrB,KAAKiB,YAAalB,MAAQ,KADnC,MAMR,OACI,6BACyB,SAApBC,KAAKV,MAAMiC,MAAmBH,EACV,SAApBpB,KAAKV,MAAMiC,MAAmBD,O,GArDLP,aCGrBS,E,kDACjB,WAAYlC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTkC,SAAS,GAEb,EAAKjB,UAAY,EAAKA,UAAUd,KAAf,gBACjB,EAAKyB,SAAW,EAAKA,SAASzB,KAAd,gBANF,E,wDASdM,KAAKI,SAAS,CACVqB,SAAU,M,+BAGRP,GACN,IAAMQ,ECdHC,KAAKC,MAAM,EAAAD,KAAKE,SAAmB,GDetC3B,QAAQC,IAAIuB,EAAc,YAC1BxB,QAAQC,IAAIe,EAAc,UAEvBA,GAAgBQ,EACf1B,KAAKV,MAAMwC,YAAW,EAAMJ,GAE5B1B,KAAKV,MAAMwC,YAAW,EAAOJ,K,+BAKjC,OACI,yBAAKZ,UAAU,YACX,yCACCd,KAAKT,MAAMkC,SACZ,kBAAC,EAAD,CAASjB,UAAaR,KAAKQ,UAC3BF,OAAQN,KAAKV,MAAMgB,OACnBL,WAAcD,KAAKV,MAAMW,cAEvBD,KAAKT,MAAMkC,SACZ,kBAAC,EAAD,CAAcN,SAAYnB,KAAKmB,SAAWI,KAAK,c,GApC1BR,aEAjBgB,E,kDACjB,WAAYzC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTkC,SAAS,GAEb,EAAKjB,UAAY,EAAKA,UAAUd,KAAf,gBACjB,EAAKyB,SAAW,EAAKA,SAASzB,KAAd,gBANF,E,wDASfM,KAAKI,SAAS,CACVqB,SAAU,M,+BAGRP,GACL,IAAMQ,EDrBG,WACb,IAAMM,EAAO,CAAC,QAAS,SACvB,OAAOA,EAAML,KAAKC,MAAMD,KAAKE,SAAWG,EAAMC,SCmBrBC,GACrBhC,QAAQC,IAAIuB,EAAc,YAC1BxB,QAAQC,IAAIe,EAAc,UACvBA,IAAiBQ,EAChB1B,KAAKV,MAAMwC,YAAW,EAAMJ,GAE5B1B,KAAKV,MAAMwC,YAAW,EAAOJ,K,+BAKjC,OACI,yBAAKZ,UAAU,YACX,yCACCd,KAAKT,MAAMkC,SACZ,kBAAC,EAAD,CAASjB,UAAaR,KAAKQ,UAC3BF,OAAQN,KAAKV,MAAMgB,OACnBL,WAAcD,KAAKV,MAAMW,cAEvBD,KAAKT,MAAMkC,SACZ,kBAAC,EAAD,CAAcN,SAAYnB,KAAKmB,SAAWI,KAAK,c,GAnC1BR,aCJjBoB,E,kDACjB,WAAY7C,GAAO,IAAD,8BACd,cAAMA,IACD2B,YAAc,EAAKA,YAAYvB,KAAjB,gBAFL,E,wDAINE,GACRI,KAAKV,MAAM8C,WAAWxC,EAAEE,OAAOc,M,+BAG/B,OACQ,6BACIZ,KAAKV,MAAM+C,UAAW,6CAAyB,0CAC/C,4BAAQvB,UAAU,mBAAmBF,GAAG,OAAOS,QAASrB,KAAKiB,aAA7D,QAGA,4BAAQH,UAAU,mBAAmBF,GAAG,OAAOS,QAAWrB,KAAKiB,aAA/D,a,GAfsBF,aCIrBuB,E,kDACjB,WAAYhD,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTgD,SAAU,KACV/C,IAAM,EACNS,WAAa,IACbuC,cAAe,KACfH,WAAY,EACZI,cAAe,MAEnB,EAAKL,WAAa,EAAKA,WAAW1C,KAAhB,gBAClB,EAAKY,OAAS,EAAKA,OAAOZ,KAAZ,gBACd,EAAKoC,WAAa,EAAKA,WAAWpC,KAAhB,gBAZJ,E,uDAcP6B,GACPvB,KAAKI,SAAS,CACVmC,SAAWhB,EACXiB,cAAgB,S,iCAGbE,EAAQD,GAEX,IAAIE,EADLD,GAE4B,SAAxB1C,KAAKT,MAAMgD,SACVI,EAAW3C,KAAKT,MAAMU,WAA+B,EAAjBD,KAAKT,MAAMC,IAChB,SAAxBQ,KAAKT,MAAMgD,WAClBI,EAAW3C,KAAKT,MAAMU,WAA+B,EAAjBD,KAAKT,MAAMC,KAEnDQ,KAAKI,SAAS,CACVZ,IAAK,GACLS,WAAa0C,EACbH,cAAgB,WAChBH,WAAY,EACZE,SAAU,KACVE,cAAgBA,KAGZC,GACR1C,KAAKI,SAAS,CACVZ,IAAK,GACL+C,SAAU,KACVC,cAAa,2CAAuCC,EAAvC,KACbJ,WAAY,EACZI,cAAgBA,M,6BAIrBjD,GACH,IAAMmD,EAAW3C,KAAKT,MAAMU,WAAaT,EACzCQ,KAAKI,SAAS,CACVZ,IAAMA,EACNS,WAAa0C,M,+BAIjB,IAAIpB,EAkBJ,OAhBIA,EADuB,SAAxBvB,KAAKT,MAAMgD,SACH,kBAAC,EAAD,CAAUzB,UAAW,OAC5BgB,WAAc9B,KAAK8B,WACnBxB,OAAQN,KAAKM,OACbL,WAAaD,KAAKT,MAAMU,aAEO,SAAxBD,KAAKT,MAAMgD,SACX,kBAAC,EAAD,CAAUzB,UAAU,OAC3BgB,WAAc9B,KAAK8B,WACnBxB,OAAQN,KAAKM,OACbL,WAAaD,KAAKT,MAAMU,aAIjB,kBAAC,EAAD,CACPoC,UAAarC,KAAKT,MAAM8C,UAAWD,WAAcpC,KAAKoC,aAGtD,yBAAKtB,UAAU,QACX,8CACA,yBAAKA,UAAU,SACX,yBAAKA,UAAU,UAAU8B,IAAKC,EAAQ,IAA2BC,IAAI,gBACrE,2BAAI9C,KAAKT,MAAMU,WAAf,MAEJ,2BAAID,KAAKT,MAAMiD,eACdxC,KAAKT,MAAMC,IAAM,GAAK,mCAASQ,KAAKT,MAAMC,KAC1C+B,O,GAnFiBR,aCMnBgC,MARf,WACE,OACE,yBAAKjC,UAAU,OACd,kBAAC,EAAD,QCKekC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KAEE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/D,QAAQ+D,MAAMA,EAAMC,c","file":"static/js/main.f5357ac8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pixel-coin-png-4.edf254ee.gif\";","import React, { Component } from 'react'\nimport './App.css'\nexport default class BetForm extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            bet: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(e){\n        e.preventDefault()\n\n        if(e.target.value  > this.props.totalCoins || e.target.value <= 0){\n            console.log('invalid bet')\n        } else {\n            this.setState({\n                [e.target.name] : e.target.value\n            })\n        }\n    }\n    handleSubmit(e){\n        e.preventDefault()\n        this.props.setBet(Number(this.state.bet))\n        this.props.toggleBet()\n    }\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                   \n                    <label htmlFor=\"bet\">What is your bet? </label>\n                    <input type=\"number\" name=\"bet\" id=\"bet\" onChange={ this.handleChange}/>\n                    <button className=\"submitButton\">Submit Bet</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './App.css'\n\nexport default class NumberChoice extends Component {\n    constructor(props){\n        super(props)\n        this.handleClick = this.handleClick.bind(this)\n\n    }\n    handleClick(e){\n        const playerChoice = e.target.value;\n        this.props.gamePlay(playerChoice)\n    }\n    render() {\n        const coinChoices = (\n            <div>\n                <button className=\"gameChoiceButton\" onClick={this.handleClick} value=\"heads\">\n                    Heads\n                </button>\n                <button className=\"gameChoiceButton\"\n                onClick={this.handleClick} value = \"tails\">\n                    Tails\n                </button>\n            </div>\n        )\n        const diceChoices = (\n            <div className=\"\">\n                <button className=\"gameChoiceButton\"\n                onClick={this.handleClick} value = \"1\">\n                    1\n                </button>\n                <button className=\"gameChoiceButton\"\n                onClick={this.handleClick} value = \"2\">\n                    2\n                </button>\n                <button className=\"gameChoiceButton\"\n                onClick={this.handleClick} value = \"3\">\n                    3\n                </button>\n                <button className=\"gameChoiceButton\"\n                onClick={this.handleClick} value = \"4\">\n                    4\n                </button>\n                <button className=\"gameChoiceButton\"\n                onClick={this.handleClick} value = \"5\">\n                    5\n                </button>\n                <button className=\"gameChoiceButton\"\n                onClick={this.handleClick} value = \"6\">\n                    6\n                </button>\n            </div>\n        )\n        return (\n            <div>\n                {this.props.game === 'coin' && coinChoices}\n                {this.props.game === 'dice' && diceChoices}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport BetForm from './BetForm';\nimport NumberChoice from './NumberChoice';\nimport {diceRoll} from './helpers';\nimport './App.css'\n\nexport default class DiceGame extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            betting: true\n        }\n        this.toggleBet = this.toggleBet.bind(this)\n        this.gamePlay = this.gamePlay.bind(this)\n    }\n    toggleBet(){\n        this.setState({\n            betting : false\n        })\n     }\n     gamePlay(playerChoice){\n        const computerPlay = diceRoll()\n        console.log(computerPlay, \"computer\")\n        console.log(playerChoice, \"player\")\n        // eslint-disable-next-line eqeqeq\n        if(playerChoice == computerPlay){\n            this.props.finishGame(true, computerPlay)\n        } else {\n            this.props.finishGame(false, computerPlay)     \n        }\n\n    }\n    render() {\n        return (\n            <div className=\"DiceGame\">\n                <h1>dice Game</h1>\n                {this.state.betting && \n                <BetForm toggleBet = {this.toggleBet} \n                setBet={this.props.setBet} \n                totalCoins = {this.props.totalCoins}/>}\n\n                {!this.state.betting &&\n                 <NumberChoice gamePlay = {this.gamePlay}  game=\"dice\"/>}\n            </div>\n        )\n    }\n}\n","const coinFlip = () =>{\n    const faces= ['heads', 'tails']\n    return faces[Math.floor(Math.random() * faces.length)]\n    \n}\n\nconst diceRoll = () =>{\n    return Math.floor(Math.random() * (6-1) + 1)\n}\n\n\nexport {coinFlip, diceRoll}","import React, { Component } from 'react'\nimport BetForm from './BetForm';\nimport NumberChoice from './NumberChoice.js'\nimport {coinFlip} from './helpers.js';\n\nimport './App.css'\nexport default class CoinGame extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            betting: true,\n        }\n        this.toggleBet = this.toggleBet.bind(this)\n        this.gamePlay = this.gamePlay.bind(this)\n    }\n    toggleBet(){\n       this.setState({\n           betting : false\n       })\n    }\n    gamePlay(playerChoice){\n        const computerPlay = coinFlip()\n        console.log(computerPlay, \"computer\")\n        console.log(playerChoice, \"player\")\n        if(playerChoice === computerPlay){\n            this.props.finishGame(true, computerPlay)\n        } else {\n            this.props.finishGame(false, computerPlay)     \n        }\n\n    }\n    render() {\n        return (\n            <div className=\"CoinGame\">\n                <h1>Coin Game</h1>\n                {this.state.betting && \n                <BetForm toggleBet = {this.toggleBet} \n                setBet={this.props.setBet} \n                totalCoins = {this.props.totalCoins}/>}\n\n                {!this.state.betting &&\n                 <NumberChoice gamePlay = {this.gamePlay}  game=\"coin\"/>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class GameSelector extends Component {\n    constructor(props){\n        super(props)\n        this.handleClick = this.handleClick.bind(this)\n    }\n    handleClick(e){\n        this.props.gamePicker(e.target.id)\n    }\n    render() {\n        return (\n                <div>\n                   {this.props.firstGame ?<h2>Select a Game</h2> : <h2>Try Again?</h2> } \n                    <button className=\"gameChoiceButton\" id=\"coin\" onClick={this.handleClick}>\n                        Coin\n                    </button>\n                    <button className=\"gameChoiceButton\" id=\"dice\" onClick = {this.handleClick}>\n                        Dice\n                    </button>\n                </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport DiceGame from './DiceGame'\nimport CoinGame from './CoinGame'\nimport GameSelector from './GameSelector'\nimport './App.css'\n\nexport default class Game extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            gametype: null,\n            bet : 0,\n            totalCoins : 100,\n            winnerMessage: null,\n            firstGame : true,\n            correctChoice: null\n        }\n        this.gamePicker = this.gamePicker.bind(this)\n        this.setBet = this.setBet.bind(this)\n        this.finishGame = this.finishGame.bind(this)\n    }\n    gamePicker(game){\n        this.setState({\n            gametype : game,\n            winnerMessage : null\n        })\n    }\n    finishGame(winner, correctChoice){\n        if(winner){\n            let newTotal;\n            if(this.state.gametype === \"dice\"){\n                newTotal = this.state.totalCoins + (this.state.bet * 6)\n            } else if (this.state.gametype === \"coin\"){\n                newTotal = this.state.totalCoins + (this.state.bet * 2)\n            }\n            this.setState({\n                bet: \"\",\n                totalCoins : newTotal,\n                winnerMessage : \"You won!\",\n                firstGame : false,\n                gametype: null,\n                correctChoice : correctChoice\n            })\n\n        } else if (!winner) {\n            this.setState({\n                bet: \"\",\n                gametype: null,\n                winnerMessage : `You lose. The correct choice was ${correctChoice}.`,\n                firstGame : false,\n                correctChoice : correctChoice\n            })\n        }\n    }\n    setBet(bet){\n        const newTotal = this.state.totalCoins - bet\n        this.setState({\n            bet : bet,\n            totalCoins : newTotal\n        })\n    }\n    render() {\n        let game;\n        if(this.state.gametype === 'dice'){\n            game = <DiceGame className= \"Dice\"\n            finishGame = {this.finishGame}\n            setBet={this.setBet} \n            totalCoins= {this.state.totalCoins}\n            />\n        } else if (this.state.gametype === 'coin'){\n            game = <CoinGame className=\"Coin\"\n            finishGame = {this.finishGame}\n            setBet={this.setBet}  \n            totalCoins= {this.state.totalCoins}\n            />\n        } else {\n            \n            game = <GameSelector   \n            firstGame = {this.state.firstGame} gamePicker = {this.gamePicker}/>\n        }\n        return (\n            <div className=\"Game\">\n                <h1>Game of Chance</h1>\n                <div className=\"coins\">\n                    <img className=\"coinGif\" src={require(\"./pixel-coin-png-4.gif\")} alt=\"gif of coin\"></img>\n                    <p>{this.state.totalCoins}g</p>\n                </div>\n                <p>{this.state.winnerMessage}</p>\n                {this.state.bet > 0 && <p>Bet: {this.state.bet}</p>}\n                {game}\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Game from './Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n  \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}